plugins {
    id 'com.android.library'
}

apply plugin: 'maven'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

// 上传maven指令
uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            //maven 本地文件地址，这里是 .. 表示项目的根目录
//            def mavenLib = file(getProperty('mavenPath'))
//            repository(url: "file://${mavenLib.absolutePath}")

            def mavenLib = file('D:/android_workspace/aar_lib/library')
            repository(url: "file://${mavenLib.absolutePath}")

//            repository(url:rootProject.ext.maven.mavenUrl) {
//                authentication(userName: rootProject.ext.maven.mavenAccount,
//                        password: rootProject.ext.maven.mavenPwd)
//            }
            pom.project {
                //版本
                version "1.0.0"
                //描述
                description "MVP模块，次模块默认引用base模块"

                // 对应maven的groupId的值(包名)
                groupId "com.jzh.lib"
                artifactId "mvpModule"
//                packaging rootProject.ext.maven.fileAAR
            }
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


//    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'//rxjava2
//    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'//
//
//    implementation 'com.squareup.retrofit2:retrofit:2.5.0'// Retrofit库
//    implementation 'com.squareup.retrofit2:converter-scalars:2.0.2'///Retrofit返回值支持String类型
//    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'// Gson解析器
//    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'//Retrofit库的rxjava插件



    //dagger
    api 'com.google.dagger:dagger:2.4'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.4'

    //StringUtils类库
    implementation 'org.apache.commons:commons-lang3:3.7'
    //MaterialDialog：一个漂亮、流畅、可定制的对话框。
    implementation "com.afollestad.material-dialogs:core:0.9.6.0"
    implementation "com.afollestad.material-dialogs:commons:0.9.6.0"
    //黄油刀butterknife
    api 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    ///数据库框架
    api 'org.greenrobot:greendao:3.2.2'

    api project(':baseModule')
}